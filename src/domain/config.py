import os

# Database server endpoint
DATABASE_SERVER_ENDPOINT = os.getenv("DATABASE_SERVER_ENDPOINT", "host.docker.internal")

# PostgreSQL
POSTGRES_USER = os.getenv("POSTGRES_USER", "user")
POSTGRES_PASSWORD = os.getenv("POSTGRES_PASSWORD", "password")
POSTGRES_DB = os.getenv("POSTGRES_DB", "lainbow_db")
POSTGRES_PORT = os.getenv("POSTGRES_PORT", "5433")
POSTGRES_URL = f"postgresql+psycopg://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{DATABASE_SERVER_ENDPOINT}:{POSTGRES_PORT}/{POSTGRES_DB}"
CELERY_BACKEND_URL = f"db+postgresql://{POSTGRES_USER}:{POSTGRES_PASSWORD}@{DATABASE_SERVER_ENDPOINT}:{POSTGRES_PORT}/{POSTGRES_DB}"

# RabbitMQ
RABBITMQ_USER = os.getenv("RABBITMQ_DEFAULT_USER", "user")
RABBITMQ_PASS = os.getenv("RABBITMQ_DEFAULT_PASS", "password")
RABBITMQ_HOST = f"{DATABASE_SERVER_ENDPOINT}"
RABBITMQ_PORT = os.getenv("RABBITMQ_PORT", "5672")
RABBITMQ_URL = f"amqp://{RABBITMQ_USER}:{RABBITMQ_PASS}@{RABBITMQ_HOST}:{RABBITMQ_PORT}/"

# Milvus
MILVUS_HOST = f"{DATABASE_SERVER_ENDPOINT}"
MILVUS_PORT = os.getenv("MILVUS_PORT_API", "19530")
MILVUS_CONNECTION_ALIAS = "default"

# Music NAS folder path
MUSIC_NAS_ROOT_DIR = "/music_library"

# Inference API
INFERENCE_SERVER_ENDPOINT = os.getenv("INFERENCE_SERVER_ENDPOINT", "host.docker.internal")
INFERENCE_API_PORT = int(os.getenv("INFERENCE_API_PORT", "8001"))
INFERENCE_MODEL_MANAGER_MODE = os.getenv("INFERENCE_MODEL_MANAGER_MODE", "single")
INFERENCE_API_URL = os.getenv(
    "INFERENCE_API_URL", f"http://{INFERENCE_SERVER_ENDPOINT}:{INFERENCE_API_PORT}"
)

# Batch
TASK_CHUNK_SIZE = int(os.getenv("TASK_CHUNK_SIZE", "10"))
MUQ_FILE_DURATION_SEC = int(os.getenv("MUQ_FILE_DURATION_SEC", "180"))
